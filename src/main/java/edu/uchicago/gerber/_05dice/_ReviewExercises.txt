#########################################################################
# Use this file to answer Review Exercises from the Big Java textbook
#########################################################################

R10.5 Eventsï¼š What is an event object? An event source? An event listener?
An event object in JAVA is an instance of the subclass and it holds information about something that is happened to its source.
Events are constructed with a reference to the object and are represented as objects.
An event source reports on events. It notifies all event listeners when an event occurs.
An event listener belongs to a class that is created by the application programmer. Its methods
describe the actions to be taken when an event occurs.

R10.6 actionPerformed: Who calls the actionPerformed method of an event listener? When does the call to the
actionPerformed method occur?
the method antionPerformed is called when the user performed the action(e.g click the button). An event source(the user-interface
component,such as button) calls the actionPerformed method when an event happens.


R10.11 Inner class and event-listeners
Why are we using inner classes for event listeners? If Java did not have inner classes,
could we still implement event listeners? How?
Inner class is an implementation detail. An event listener belongs to a class created by the application
programmer. Its method describe the actions to be taken when an event occurs.
There are two advantages to making a listener class into an inner class. First, listener classes tend to be very
short. You can put the inner class close to where it is needed, without cluttering up the remainder of the
project. Moreover, inner classes have a very attractive feature: Their methods can access instance variables
and methods of the surrounding class.
It allows the inner class to access variables without having to receive them as constructor or method arguments.
We can still implement event listener if there is no inner class. But we will have to receive variables as constructors
or method arguments when the event listener wants to access variables from other classes.


R10.14 Object hierarchies: Name a method that is declared in JTextArea, a method that JTextArea inherits from
JTextComponent, and a method that JTextArea inherits from JComponent.
JTextArea textArea = new JTextArea(ROWS, COLUMNS);
JComponent component = new JComponent()
JTextComponent jcom = new JTextComponent()
JComponent c = (JComponent) textArea
JTextArea test_area  = (JTextArea) jcom

R10.22 Graphic methods How would you modify the drawItalianFlag method in How To 10.1 to draw any flag
with a white vertical stripe in the middle and two arbitrary colors to the left and right?
set rectangle and color for the left one and right one. for the middle white area, fill it with white and
draw two lines vertically to show its bound.

R11.2 Layout managers
It is quite adaptive. If the size of the container changes then the layout manager
automatically repositions the components.

R11.11 ButtonGroup:Why do you need a button group for radio buttons but not for check boxes?
Radio buttons represent mutually exclusive selections, while checkboxes represent mutually inclusive ones.
Radio buttons are used when there is a list of two or more options
that are mutually exclusive and the user must select exactly one choice.


R11.19 Types of Events: What is the difference between an ActionEvent and a MouseEvent?
MouseEvents is generated by a mouse interaction like a move or button click.
A MouseEvent is detected by the MouseListener. Every type ofMouseEvent must have a separate method
to provide for processing different types of events.
An ActionEvent is detected by theActionListener and can detect component-specific actions. Only one can
processed at a time.Often multiple events will be generated for a single action.

R11.20 Events: What information does an action event object carry?
What additional information does a mouse event object carry? Hint: Check the API documentation.
An ActionEvent carries the name of an action to be performed (the action command) by the program.
While MouseEvents are generated when a user uses the mouse within a component's area and it carries
information like how user manipulate the mouse.


R11.21 ActionListener versus MouseListener: Why does the ActionListener interface have only one method,
whereas the MouseListener has five methods?
Because a mouse can be clicked, double clicked, dragged, moved, etc while a key can only be pressed.








